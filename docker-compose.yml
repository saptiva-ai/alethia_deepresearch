# Aletheia Deep Research - Minimalist Docker Compose
# Solo incluye el servicio API esencial

networks:
  aletheia-network:
    driver: bridge

services:
  # MongoDB Service
  mongodb:
    image: mongo:7.0
    container_name: aletheia-mongodb
    restart: unless-stopped
    ports:
      - "${MONGO_PORT:-27018}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-aletheia}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-aletheia_password}
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE:-aletheia}
    networks:
      - aletheia-network
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aletheia-api
    restart: unless-stopped
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      # Saptiva Configuration
      - SAPTIVA_API_KEY=${SAPTIVA_API_KEY}
      - SAPTIVA_BASE_URL=${SAPTIVA_BASE_URL:-https://api.saptiva.com/v1}
      - SAPTIVA_MODEL_PLANNER=${SAPTIVA_MODEL_PLANNER:-Saptiva Ops}
      - SAPTIVA_MODEL_WRITER=${SAPTIVA_MODEL_WRITER:-Saptiva Cortex}
      - SAPTIVA_MODEL_RESEARCHER=${SAPTIVA_MODEL_RESEARCHER:-Saptiva Ops}

      # Tavily Search Configuration
      - TAVILY_API_KEY=${TAVILY_API_KEY}

      # MongoDB Configuration
      - MONGODB_URL=${MONGODB_URL:-mongodb://aletheia:aletheia_password@mongodb:27017}
      - MONGODB_DATABASE=${MONGO_DATABASE:-aletheia}

      # Vector Storage (disabled by default)
      - VECTOR_BACKEND=none

      # Application Configuration
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - API_HOST=0.0.0.0
      - API_PORT=8000
    networks:
      - aletheia-network
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    volumes:
      # Mount for artifacts/logs if needed
      - ./runs:/app/runs

  # --- Optional Services (commented out by default) ---

  # Uncomment if you need Weaviate vector database
  # weaviate:
  #   image: semitechnologies/weaviate:1.21.8
  #   container_name: aletheia-weaviate
  #   restart: unless-stopped
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
  #     PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
  #     DEFAULT_VECTORIZER_MODULE: 'none'
  #   networks:
  #     - aletheia-network

  # Uncomment if you need OpenTelemetry observability
  # jaeger:
  #   image: jaegertracing/all-in-one:latest
  #   container_name: aletheia-jaeger
  #   ports:
  #     - "16686:16686"
  #     - "4317:4317"
  #   environment:
  #     - COLLECTOR_OTLP_ENABLED=true
  #   networks:
  #     - aletheia-network

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
