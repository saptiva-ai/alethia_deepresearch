# Docker Compose - SERVICIOS ESENCIALES SOLAMENTE
# Para desarrollo y testing b√°sico

networks:
  aletheia-network:
    driver: bridge

volumes:
  weaviate_data:
    driver: local
  minio_data:
    driver: local

services:
  # === SERVICIOS ESENCIALES ===
  
  # Jaeger para observabilidad
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: aletheia-jaeger
    restart: unless-stopped
    ports:
      - "16686:16686" # Jaeger UI
      - "4317:4317"   # OTLP gRPC receiver
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - SPAN_STORAGE_TYPE=memory
      - LOG_LEVEL=info
    networks:
      - aletheia-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:16686/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Weaviate para vectores y evidencia
  weaviate:
    image: semitechnologies/weaviate:1.21.8
    container_name: aletheia-weaviate
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - weaviate_data:/var/lib/weaviate
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: ''
      CLUSTER_HOSTNAME: 'node1'
      LOG_LEVEL: 'info'
    networks:
      - aletheia-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/v1/.well-known/ready"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # MinIO para storage de artifacts
  minio:
    image: minio/minio:latest
    container_name: aletheia-minio
    restart: unless-stopped
    ports:
      - "9000:9000" # API
      - "9001:9001" # Console
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
      MINIO_BROWSER_REDIRECT_URL: http://localhost:9001
    command: server /data --console-address ":9001"
    networks:
      - aletheia-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3